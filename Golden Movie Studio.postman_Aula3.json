{
	"info": {
		"_postman_id": "3efe4d4a-e537-408b-81b5-1d3edf74cba7",
		"name": "Golden Movie Studio",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33931648"
	},
	"item": [
		{
			"name": "Validação de Campos Obrigatorios",
			"item": [
				{
					"name": "Nome",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar a propriedade message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"message\");\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar a propriedade message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Nome não pode estar vazio\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"\",\r\n  \"sobrenome\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"telefone\": \"25252426\",\r\n  \"senha\": \"{{$randomPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/cadastro",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cadastro"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sobrenome",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar a propriedade message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"message\");\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar a propriedade message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Sobrenome não pode estar vazio\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"{{$randomFirstName}}\",\r\n  \"sobrenome\": \"\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"telefone\": \"25252426\",\r\n  \"senha\": \"{{$randomPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/cadastro",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cadastro"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar a propriedade message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"message\");\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar a propriedade message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"E-mail não pode estar vazio\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"{{$randomFirstName}}\",\r\n  \"sobrenome\": \"{{$randomLastName}}\",\r\n  \"email\": \"\",\r\n  \"telefone\": \"25252426\",\r\n  \"senha\": \"{{$randomPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/cadastro",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cadastro"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cadastro de usuário",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code deve ser 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Deve validar a propriedade message\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"message\");\r",
							"});\r",
							"\r",
							"pm.test(\"Deve validar a propriedade message\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso!\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"{{$randomFirstName}}\",\r\n  \"sobrenome\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"telefone\": \"25252426\",\r\n  \"senha\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/cadastro",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cadastro"
					]
				}
			},
			"response": []
		},
		{
			"name": "Validação de Email já existente",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code deve ser 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Deve validar a propriedade message\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"message\");\r",
							"});\r",
							"\r",
							"pm.test(\"Deve validar a propriedade message\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Este email já está cadastrado.\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"{{$randomFirstName}}\",\r\n  \"sobrenome\": \"{{$randomLastName}}\",\r\n  \"email\": \"mayara@teste.com\",\r\n  \"telefone\": \"25252426\",\r\n  \"senha\": \"Senha!12\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/cadastro",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cadastro"
					]
				}
			},
			"response": []
		},
		{
			"name": "Validação de senha Fraca",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code deve ser 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Deve validar a propriedade message\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"message\");\r",
							"});\r",
							"\r",
							"pm.test(\"Deve validar a propriedade message\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Senha deve ter pelo menos 8 caracteres, incluir uma letra maiúscula, um número e um caractere especial (!@#$&*)\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"{{$randomFirstName}}\",\r\n  \"sobrenome\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"telefone\": \"\",\r\n  \"senha\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/cadastro",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cadastro"
					]
				}
			},
			"response": []
		},
		{
			"name": "Buscar usuário por ID valido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code deve ser 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Deve validar as propriedades id, nome, email\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"id\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"nome\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"email\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/usuario/id/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"usuario",
						"id",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Buscar usuário por ID invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Deve validar a propriedade message\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"message\");\r",
							"});\r",
							"\r",
							"pm.test(\"Deve validar a mensagem de retorno\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Usuário não encontrado \");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/usuario/id/20",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"usuario",
						"id",
						"20"
					]
				}
			},
			"response": []
		},
		{
			"name": "Busca de usuário por email valido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Deve validar as propriedades id, nome, email\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"id\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"nome\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"email\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/usuario/email/mayara@teste.com",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"usuario",
						"email",
						"mayara@teste.com"
					]
				}
			},
			"response": []
		},
		{
			"name": "Busca de usuário por email invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Deve validar a propriedade message\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"message\");\r",
							"});\r",
							"\r",
							"pm.test(\"Deve validar a mensagem de retorno\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Usuário não encontrado \");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/usuario/email/mayara123@teste.com",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"usuario",
						"email",
						"mayara123@teste.com"
					]
				}
			},
			"response": []
		}
	]
}